from astropy import units as u
from ctapipe.core import Container, Field
from numpy import nan

class MAGICMCHeaderContainer(Container):
    corsika_version = Field(nan, "CORSIKA version *  1000")
    refl_version = Field(nan, "refl version")
    cam_version = Field(nan, "camera version")
    run_number = Field(nan, "MC Run Number")
    prod_site = Field(nan, "Production site")
    date_run_mmcs = Field(nan, "Date Run MMCs")
    date_run_cam = Field(nan, "Date Run Camera")
    shower_theta_max = Field(nan * u.deg, "Shower Theta Maximum", unit = u.deg)
    shower_theta_min = Field(nan * u.deg, "Shower Theta Minimum", unit = u.deg)
    shower_phi_max = Field(nan * u.deg, "Shower Phi Maximum", unit = u.deg)
    shower_phi_min = Field(nan * u.deg, "Shower Phi Minimum", unit = u.deg)
    c_wave_lower = Field(nan, "C Wave Lower")
    c_wave_upper = Field(nan, "C Wave Upper")
    num_obs_lev = Field(nan, "Number Observations Level")
    height_lev = Field([], "Height Level")
    slope_spec = Field(nan, "Slope Spec")
    rand_pointing_cone_semi_angle = Field(nan * u.deg, "Random Pointing Cone Semi Angle", unit = u.deg)
    impact_max = Field(nan, "Imapact Maximum")
    star_field_rotate = Field(nan, "Star Field Rotate")
    star_field_ra_h = Field(nan, "Star Field RA H")
    star_field_ra_m = Field(nan, "Star Field RA M")
    star_field_ra_s = Field(nan, "Star Field RA S")
    star_field_dec_d = Field(nan, "Star Field DEC D")
    star_field_dec_m = Field(nan, "Star Field DEC M")
    star_field_dec_s = Field(nan, "Star Field DEC S")
    num_trig_cond = Field(nan, "Number Trigger Condition")
    all_evts_trig = Field(nan,  "All Events Triggered")
    mc_evt = Field(nan, "MC Event")
    mc_trig = Field(nan, "MC Trigger")
    mc_fadc = Field(nan, "MC Fadc")
    raw_evt = Field(nan, "Raw Event")
    num_analised_pix = Field(nan, "Number of Analised Pixels")
    num_simulated_showers = Field(nan, "Number of Simulated Showers")
    num_stored_showers = Field(nan, "Number of Stored Showers")
    num_events = Field(nan, "Number of Events")
    num_phe_from_dnsb = Field(nan, "Number Phe from DNSB")
    elec_noise = Field(nan, "Elec Noise")
    optic_links_noise = Field(nan, "Optic Links Noise")
