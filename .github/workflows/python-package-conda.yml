name: CI

on: [push]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-22.04]
        pyv: [3.9, '3.10', 3.11, 3.12]
      max-parallel: 5
    runs-on: ${{ matrix.os }}
    permissions:
      id-token: write
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Set up Python ${{ matrix.pyv }}
      run: |
        conda install -y python=${{ matrix.pyv }}
    - name: Add conda to system path
      run: |
        # $CONDA is an environment variable pointing to the root of the miniconda directory
        echo $CONDA/bin >> $GITHUB_PATH
    - name: Install dependencies
      run: |
        conda env update --file environment.yml --name base
        conda list
    - name: Lint with flake8
      run: |
        conda install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Install with pip
      run: |
        pip install -e .
    - name: Test with pytest
      run: |
        conda install pytest
        pytest

  condapublish:
    strategy:
      matrix:
        os: [ubuntu-22.04]
        pyv: ["3.10", 3.11, 3.12]
      max-parallel: 5
    runs-on: ${{ matrix.os }}
    permissions:
      id-token: write
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Set up Python ${{ matrix.pyv }}
      run: |
        conda install -y python=${{ matrix.pyv }}
    - name: Get version
      run: |
        output=$(python exectestversion.py)
        echo "::set-output name=changelog::$output"
      id: step1
    - name: Use the value
      id: step_two
      run: |
          echo "${{ steps.step1.outputs.changelog }}"  
    - name: Write
      uses: 1arp/create-a-file-action@0.4.5
      with:
        path: '.'
        isAbsolutePath: false
        file: 'testversion.txt'
        content: |
          "${{ steps.step1.outputs.changelog }}"
    - name: Set up git
      run: |
        conda install git
        sudo apt-get install python3-numpy
    - name: Add conda to system path
      run: |
        # $CONDA is an environment variable pointing to the root of the miniconda directory
        echo $CONDA/bin >> $GITHUB_PATH
    - name: Install dependencies
      run: |
        conda env update --file environment.yml --name base
    - name: publish-to-conda
      uses: fcakyon/conda-publish-action@v1.3
      with:
        subdir: 'conda'
        anacondatoken: ${{ secrets.ANACONDA_TOKEN }}


  test:
    strategy:
      matrix:
        os: [ubuntu-22.04]
        pyv: [3.12]
      max-parallel: 5
    runs-on: ${{ matrix.os }}
    permissions:
      id-token: write
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Set up Python ${{ matrix.pyv }}
      run: |
        conda install -y python=${{ matrix.pyv }}
    - name: Get version
      run: |
        output=$(python exectestversion.py)
        echo "::set-output name=changelog::$output"
      id: step1
    - name: Use the value
      id: step_two
      run: |
          echo "${{ steps.step1.outputs.changelog }}"  
    - name: Write1
      uses: schdck/create-env-json@v1
      id: create-env
      with:
        file-name: 'env.json'
        super:  "${{ steps.step1.outputs.changelog }}"
    - name: Write
      uses: 1arp/create-a-file-action@0.4.5
      with:
        path: '.'
        isAbsolutePath: true
        file: 'testversion.txt'
        content: |
          "${{ steps.step1.outputs.changelog }}"

    - name: aux
      run: |
      
        git config --global user.email "rcervino@ucm.es"
        git config --global user.name "rcervinoucm"
        git status
        git add .
        git commit -m "Auto updating TODO.txt"
        git push
        
        
